apply plugin: 'maven'

def username
def password

def libVersion;
def libArtifactId;
def libGroupId = 'com.xincheng.android';
def libDescription = 'lib';

task readProperty() {
    File file = project.file("publish.properties");
    if (!file.exists()) {
        file.createNewFile();
        Writer writer = file.newWriter();
        writer.writeLine("username=");
        writer.writeLine("password=");
        writer.writeLine("groupId=com.android.tracker");
        writer.writeLine("artifactId=" + project.name);
        writer.writeLine("version=0.0.1-SNAPSHOT");
        writer.writeLine("description=默认描述,请根据情况修改相应字段");
        writer.close();
        throw new FileNotFoundException("请修改" + file.getPath() + "\n中的默认信息!\n注意只提醒一次，否则使用默认!");
    }

    Properties properties = new Properties();
    InputStream inputStream = file.newInputStream();
    properties.load(inputStream);
    username = properties.getProperty("username");
    password = properties.getProperty("password");
    libVersion = properties.getProperty("version");
    libArtifactId = properties.getProperty("artifactId");
    libGroupId = properties.getProperty("groupId")
    libDescription = properties.getProperty("description")
    inputStream.close();
}

task createTag(type: Exec) {
    executable "sh"
    args "-c", "git tag v" + libVersion
}

task pushTag(type: Exec) {
    executable "sh"
    args "-c", "git push origin v" + libVersion
}

//上传AAR、source、JavaDoc脚本
uploadArchives {
    repositories {
        //配置仓库地址和模块相关信息
        mavenDeployer {
            snapshotRepository(url: 'http://maven.xinc818.com/repository/maven-snapshots') {
                authentication(userName: username, password: password)
            }
            repository(url: 'http://maven.xinc818.com/repository/maven-releases') {
//                authentication(userName: 'admin', password: 'vGfiJfLlnKVK7d3b')
                authentication(userName: username, password: password)
            }
            pom.project {
                version libVersion
                artifactId libArtifactId
                groupId libGroupId
                description libDescription
                packaging 'aar'
            }
        }

        //创建源文件任务
        task androidSourcesJar(type: Jar) {
            classifier = 'sources'
            from android.sourceSets.main.java.srcDirs
        }

        //上传文件
        artifacts {
            archives androidSourcesJar
        }
    }
}.doLast {
    if (!libVersion.endsWith("-SNAPSHOT")) {
        createTag.execute()
    }
}.doLast {
    if (!libVersion.endsWith("-SNAPSHOT")) {
        pushTag.execute()
    }
}